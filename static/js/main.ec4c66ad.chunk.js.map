{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxiliary/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","store/actions/auth.js","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_SWITCH_MODE","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","err","module","exports","instance","create","baseURL","authSwitchMode","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","process","setItem","expirationDate","Date","getTime","expiresIn","localId","setAuthRedirectPath","path","authCheckState","getItem","backdrop","show","className","classes","Backdrop","onClick","backdropClicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","Button","btnType","join","clicked","disabled","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Remove","removed","Add","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","CheckoutButton","purchasable","checkedOut","orderSummary","ingredientSummary","textTransform","purchaseContinued","purchaseCancelled","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","Spinner","onAddIngredient","onRemoveIngredient","updatePurchaseState","OrderSummary","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","lettuce","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","showBurger","purchaseBurgerStart","newOrder","orderDate","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ec4c66ad.chunk.js","sourcesContent":["//burger builder actions\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n//order/checkout actions\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\n//fetch orders\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\n//authentication\r\nexport const AUTH_SWITCH_MODE = 'AUTH_SWITCH_MODE';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\n//redirect\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n};\r\n\r\n//check if form is valid\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    //if empty string, then isValid is false\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid; //trim white spaces\r\n    }\r\n    //check minimum length\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    //check max length\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    return isValid;\r\n}","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\n//sync action creator to dispatch once async code in initIngredients is done\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\n//sync creator to dispatch if async code in initIngredients fails to fetch ingredients\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\n//fetch ingredients asynchronously\r\nexport const initIngredients = () => {\r\n    //execute async code & dispatch new actions when done\r\n    return dispatch => {\r\n        axios.get('https://react-burger-builder-c740a.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed())\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n//start fetching burger\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\n//async action\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        //POST request\r\n        axios.post('/orders.json?auth=' + token, orderData) //path gets appended to baseURL path\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\n//start purchase\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        //string to pass onto get request\r\n        //&orderBy: ordering can be used to filter, &equalTo: the key you're ordering by\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                //turn orders object into array of single order objects\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    };\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1f8qY\",\"BreadTop\":\"BurgerIngredient_BreadTop__3C0hw\",\"Seeds1\":\"BurgerIngredient_Seeds1__3xiHn\",\"Seeds2\":\"BurgerIngredient_Seeds2__LSNPY\",\"Meat\":\"BurgerIngredient_Meat__rOWpV\",\"Cheese\":\"BurgerIngredient_Cheese__2lAEY\",\"Lettuce\":\"BurgerIngredient_Lettuce__37hhL\",\"Bacon\":\"BurgerIngredient_Bacon__2JDvW\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-c740a.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__Pmff7\",\"Open\":\"SideDrawer_Open__3JC6J\",\"Close\":\"SideDrawer_Close__RKu2S\",\"Logo\":\"SideDrawer_Logo__MUgtN\"};","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authSwitchMode = () => {\r\n    return {\r\n        type: actionTypes.AUTH_SWITCH_MODE\r\n    };\r\n};\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\n//async action creator\r\nexport const logout = () => {\r\n    //remove token, expiration time, user id from local storage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\n//log user out after 1 hr\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        //dispatch logout action after expirationTime\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000); //reads milliseconds --> times 1000 to turn 3.6sec to 1 hr\r\n    };\r\n};\r\n\r\n//async action creator\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        //default url is the signup url\r\n        let url = process.env.FIREBASE_SIGNUP_URL;\r\n        //if not in signup mode, set url to sign in url endpoint\r\n        if (!isSignup) {\r\n            url = process.env.FIREBASE_SIGNIN_URL;\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                //store token & expiration time in local storage\r\n                localStorage.setItem('token', response.data.idToken);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                //store user id to be fetched upon reload\r\n                localStorage.setItem('userId', response.data.localId);\r\n\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                //get Firebase error message\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\n//redirect\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\n//check if user was logged in\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        //get token\r\n        const token = localStorage.getItem('token');\r\n        //if token is null (invalid)\r\n        if (!token) {\r\n            dispatch(logout());\r\n        }\r\n        else { //get expiration time\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            //if expiration date is passed (expired), then log out\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            }\r\n            else { //expiration date hasn't passed, log in\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                //amount of time before logout\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1i46Z\",\"Label\":\"BuildControl_Label__1SvXg\",\"Remove\":\"BuildControl_Remove__14ITN\",\"Add\":\"BuildControl_Add__2Kfzg\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.backdropClicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        //update if prop changes or its children changes\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} backdropClicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    //use conditional to show/hide modal\r\n                    style={{\r\n                        //translateY(0) = position defined in CSS, -100vh (viewport height) slide outside screen\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2iYqL\",\"Logo\":\"Toolbar_Logo__dk5Xh\",\"DesktopOnly\":\"Toolbar_DesktopOnly__lFPh8\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n        //assign button class & conditionally add Success/Danger class\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}//array of strings to string\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2R3hb\",\"active\":\"NavigationItem_active__qd3RH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__YrLu-\",\"CheckoutButton\":\"BuildControls_CheckoutButton__xb9pv\",\"enable\":\"BuildControls_enable__3TMkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3nKLi\",\"Success\":\"Button_Success__jOPFF\",\"Danger\":\"Button_Danger__1PiTF\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    //instance of withErrorHandler\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n        \r\n        //executed when component is created\r\n        UNSAFE_componentWillMount() { //or constructor()\r\n            //when send request, clear any errors\r\n            //store interceptor in properties for removal later\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            //set error upon response\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => { //return response\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        //executed when component no longer required\r\n        componentWillUnmount () {\r\n            //remove interceptors\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n        \r\n        //clear error when backdrop clicked\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {/*only output error message if error isn't null*/}\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    {/*distribute any props the component might receive*/}\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'): \r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('lettuce'): \r\n                ingredient = <div className={classes.Lettuce}></div>;\r\n                break;\r\n            case ('bacon'): \r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired //need to pass a type\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    //turn ingredients object into array - extract keys of object & turn that into an array of keys\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => { //transform string value into array with as many elements as ingredients for an ingredient\r\n                        //Ex. 2 cheese ingredients - transform cheese string into array with 2 elements\r\n            //igKey = ingredient type, props.ingredients[igKey] = amount of ingredient\r\n            return [...Array(props.ingredients[igKey])].map((_,i) => { //(type, index)\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            });\r\n        })\r\n        //flatten array - get array of inner array values\r\n        //transform array into something else (takes in prev value & current value)\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []); \r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.Burger}>\r\n            {/*always have bread-top & bread-bottom*/}\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1QOjz\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2fwBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1_Bw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3p9nW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2mJPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__siYRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2Kydf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__18WH-\",\"load3\":\"Spinner_load3__1Wn_W\"};","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>  \r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated\r\n            ? <NavigationItem link=\"/auth\">Sign Up</NavigationItem>\r\n            : <NavigationItem link=\"/logout\">Sign Out</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close]\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} backdropClicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        //cleaner way of setting state based on old state\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}\r\n                />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}\r\n                />\r\n                <main className={classes.Content}>\r\n                    {/*allows us to use layout component as a wrapper around core content component*/}\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //true if token != null\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div> {/*ingredient label*/}\r\n        {/*remove ingredient*/}\r\n        <button \r\n            className={classes.Remove}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>\r\n            Remove\r\n        </button> \r\n        {/*add ingredient*/}\r\n        <button \r\n            className={classes.Add}\r\n            onClick={props.added}>\r\n            Add\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Lettuce', type: 'lettuce'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => ( //map each control to a BuildControl object\r\n            <BuildControl \r\n                key={ctrl.label}\r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n            />\r\n        ))}\r\n        <button \r\n            className={classes.CheckoutButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.checkedOut}>\r\n            {props.isAuth ? 'CHECKOUT' : 'SIGN UP/SIGN IN TO CHECKOUT'}\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li>\r\n            //Ex. {Lettuce: 1}\r\n        );\r\n    });\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your customized burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: ${props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default orderSummary;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport class BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false\r\n    }\r\n    \r\n    //fetch data\r\n    componentDidMount () {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    //check whether we turn purchasable to true/false\r\n    updatePurchaseState(ingredients) {\r\n        //sum up all values - turn object into array of values (amount of ingredients)\r\n        const sum = Object.keys(ingredients) //array of strings (ingredients)\r\n            .map(igKey => { //map to ingredient values\r\n                return ingredients[igKey] //get amount of ingredients\r\n            })\r\n            //reduce array to a number (sum)\r\n            .reduce((sum, el) => { //(sum, new element number)\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    //when Checkout button is clicked\r\n    purchaseHandler = () => {\r\n        //if authenticated, then set state to purchasing\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({purchasing: true});\r\n        }\r\n        //else, redirect to auth page to sign up\r\n        else {\r\n            //go to checkout after auth\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    //when modal backdrop/or cancel button in order summary is clicked\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    //when continue button in order summary is clicked\r\n    purchaseContinueHandler = () => {\r\n       this.props.onInitPurchase();\r\n       this.props.history.push('/checkout');\r\n    }\r\n\r\n    render () {\r\n        //copy ingredients in immutable way - new object with properties of old object\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        //loop through all keys in disabledInfo\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0; //true if <= 0\r\n            // {lettuce: true, meat: false, ...}\r\n        }\r\n\r\n        //no orderSummary if no ingredients loaded yet\r\n        let orderSummary = null;\r\n\r\n        //show error message if no ingredients loaded (null), otherwise show spinner\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n        //show burger & controls and set orderSummary when ingredients loaded\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/> {/*graphical representation of burger*/}\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onAddIngredient}\r\n                        ingredientRemoved={this.props.onRemoveIngredient}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        checkedOut = {this.purchaseHandler}\r\n                    />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price}/>;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}> {/*show only if purchasing is true*/}\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddIngredient: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onRemoveIngredient: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from 'react';\r\n\r\n//takes in a function reference\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        //executes function only when component mounts\r\n        componentDidMount() {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component:cmp.default});\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n\r\n            //if component is set, set C passing in any properties the component may contain\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React, {Component} from 'react';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\n//load component lazily\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\nclass App extends Component {\n  //log user in if auth still valid\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    //guard routes\n    //default routes - if not authenticated\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth}/>\n        <Route path=\"/\" component={BurgerBuilder}/>\n        <Redirect to=\"/\"/> {/*redirect if reaches unknown page*/}\n      </Switch>\n    );\n    //if authenticated\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout}/>\n          <Route path=\"/orders\" component={asyncOrders}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/auth\" component={asyncAuth}/>\n          <Route path=\"/\" component={BurgerBuilder}/>\n          <Redirect to=\"/\"/>\n        </Switch>\n      );\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false //if currently building burger\r\n};\r\n\r\nconst INGREDIENT_PRICES = { //global variable\r\n    lettuce: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        //manually change order of ingredients by mapping\r\n        ingredients: {\r\n            lettuce: action.ingredients.lettuce,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false, //reset error in case error was set to true})\r\n        building: false //starting burger from scratch when reloaded page\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [], //put orders in array\r\n    loading: false, //in the process of ordering or done\r\n    purchased: false, \r\n    showBurger: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false});\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderDate, {id: action.orderId});\r\n    return updateObject(state, {\r\n        ...state,\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {   \r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\n//reset error upon mode switch\r\nconst authSwitchMode = (state, action) => {\r\n    return updateObject(state, {error: null});\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\n//redirect\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_SWITCH_MODE: return authSwitchMode(state, action);\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\n//unlock redux dev tools only if in development mode\nconst composeEnhancers = process.env.NODE_ENV === 'development'\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}